public enum DataVals.TYPE // TypeDefIndex: 6232
{
	// Fields
	public int value__; // 0x0
	public const DataVals.TYPE Rate = 0;
	public const DataVals.TYPE Turn = 1;
	public const DataVals.TYPE Count = 2;
	public const DataVals.TYPE Value = 3;
	public const DataVals.TYPE Value2 = 4;
	public const DataVals.TYPE UseRate = 5;
	public const DataVals.TYPE Target = 6;
	public const DataVals.TYPE Correction = 7;
	public const DataVals.TYPE ParamAdd = 8;
	public const DataVals.TYPE ParamMax = 9;
	public const DataVals.TYPE HideMiss = 10;
	public const DataVals.TYPE OnField = 11;
	public const DataVals.TYPE HideNoEffect = 12;
	public const DataVals.TYPE Unaffected = 13;
	public const DataVals.TYPE ShowState = 14;
	public const DataVals.TYPE AuraEffectId = 15;
	public const DataVals.TYPE ActSet = 16;
	public const DataVals.TYPE ActSetWeight = 17;
	public const DataVals.TYPE ShowQuestNoEffect = 18;
	public const DataVals.TYPE CheckDead = 19;
	public const DataVals.TYPE RatioHPHigh = 20;
	public const DataVals.TYPE RatioHPLow = 21;
	public const DataVals.TYPE SetPassiveFrame = 22;
	public const DataVals.TYPE ProcPassive = 23;
	public const DataVals.TYPE ProcActive = 24;
	public const DataVals.TYPE HideParam = 25;
	public const DataVals.TYPE SkillID = 26;
	public const DataVals.TYPE SkillLV = 27;
	public const DataVals.TYPE ShowCardOnly = 28;
	public const DataVals.TYPE EffectSummon = 29;
	public const DataVals.TYPE RatioHPRangeHigh = 30;
	public const DataVals.TYPE RatioHPRangeLow = 31;
	public const DataVals.TYPE TargetList = 32;
	public const DataVals.TYPE OpponentOnly = 33;
	public const DataVals.TYPE StatusEffectId = 34;
	public const DataVals.TYPE EndBattle = 35;
	public const DataVals.TYPE LoseBattle = 36;
	public const DataVals.TYPE AddIndividualty = 37;
	public const DataVals.TYPE AddLinkageTargetIndividualty = 38;
	public const DataVals.TYPE SameBuffLimitTargetIndividuality = 39;
	public const DataVals.TYPE SameBuffLimitNum = 40;
	public const DataVals.TYPE CheckDuplicate = 41;
	public const DataVals.TYPE OnFieldCount = 42;
	public const DataVals.TYPE TargetRarityList = 43;
	public const DataVals.TYPE DependFuncId = 44;
	public const DataVals.TYPE DependFuncVals = 45;
	public const DataVals.TYPE InvalidHide = 46;
	public const DataVals.TYPE OutEnemyNpcId = 47;
	public const DataVals.TYPE InEnemyNpcId = 48;
	public const DataVals.TYPE OutEnemyPosition = 49;
	public const DataVals.TYPE IgnoreIndividuality = 50;
	public const DataVals.TYPE StarHigher = 51;
	public const DataVals.TYPE ChangeTDCommandType = 52;
	public const DataVals.TYPE ShiftNpcId = 53;
	public const DataVals.TYPE DisplayLastFuncInvalidType = 54;
	public const DataVals.TYPE AndCheckIndividualityList = 55;
	public const DataVals.TYPE WinBattleNotRelatedSurvivalStatus = 56;
	public const DataVals.TYPE ForceSelfInstantDeath = 57;
	public const DataVals.TYPE ChangeMaxBreakGauge = 58;
	public const DataVals.TYPE ParamAddMaxValue = 59;
	public const DataVals.TYPE ParamAddMaxCount = 60;
	public const DataVals.TYPE LossHpChangeDamage = 61;
	public const DataVals.TYPE IncludePassiveIndividuality = 62;
	public const DataVals.TYPE MotionChange = 63;
	public const DataVals.TYPE PopLabelDelay = 64;
	public const DataVals.TYPE NoTargetNoAct = 65;
	public const DataVals.TYPE CardIndex = 66;
	public const DataVals.TYPE CardIndividuality = 67;
	public const DataVals.TYPE WarBoardTakeOverBuff = 68;
	public const DataVals.TYPE ParamAddSelfIndividuality = 69;
	public const DataVals.TYPE ParamAddOpIndividuality = 70;
	public const DataVals.TYPE ParamAddFieldIndividuality = 71;
	public const DataVals.TYPE ParamAddValue = 72;
	public const DataVals.TYPE MultipleGainStar = 73;
}
